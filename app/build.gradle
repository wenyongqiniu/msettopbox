apply plugin: 'com.android.application'


android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.waoqi.msettopboxs"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            keyAlias = '123456'
            keyPassword = '123456'
            storeFile = file('../keystore.jks')
            storePassword = '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation files('libs/AuthClient_v1.0.3.jar')
    implementation files('libs/jsmcc_sso.jar')
    implementation files('libs/DevinfoManager-2.0.1.jar')


    implementation project(path: ':core')
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    implementation 'me.jessyan:autosize:1.1.2'


}
preBuild {
    doLast {
        def imlFile = file("app.iml")
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': 'Android API 29 Platform', 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
repositories {
    mavenCentral()
}
